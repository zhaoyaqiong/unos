; 主引导程序
; ------------------------------------------------------------
SECTION MBR vstart=0x7c00
	mov ax, cs
	mov ds, ax
	mov es, ax
	mov ss, ax
	mov fs, ax
	mov sp, 0x7c00

; 利用0x06功能，上卷全部行，进行清屏
; INT 0x10 功能号：0x06 功能描述：上卷窗口
; 输入：
; AH 功能号 0x06
; AL 上卷行数 0为全部
; (CL, CH) 窗口左上角(x, y)位置
; (DL, DH) 窗口右下角(x, y)位置
; 无返回值
; ------------------------------------------------------------
	mov ax, 0x600
	mov bx, 0x700
	mov cx, 0x0 		; 左上角(0, 0)
	mov dx, 0x184f 		; 右下角(80, 25)
	; VGA 模式下一行只能容纳80个字符 共25行
	int 0x10

;;;;;;;;　 　 下面这三行代码获取光标位置 　 　;;;;;;;;;
;. get_cursor 获取 当前 光标 位置, 在 光标 位置 处 打印 字符｡ 
	mov ah, 3
; 输入: 3 号子 功能 是 获取 光标 位置, 需要 存入 ah 寄存器
	mov bh, 0
; bh 寄存器 存储 的 是 待 获取 光标 的 页号 　 　 
	int 0x10
; 输出: 
; 	ch=光标开始行, cl=光标结束行
; 	dh=光标所在行号, dl=光标所在列号
;;;;;;;;;　 　 获取光标位置结束 　 　;;;;;;;;;;;;;;;;

;;;;;;;;; 		打印字符串
; 仍然是0x10中断，调用13号子功能
	mov ax, message
	mov bp, ax 				; ex:bp是串首地址
							; 开头已经为sreg初始化
; 光标位置要用到dx寄存器中的内容，cx中的光标s位置可以忽略
	mov cx, 5 				; cx为串长度，不包括结束符0的字符个数
	mov ax, 0x1301 			; 子功能号13显示字符及属性 存入ah寄存器，al设置写字符方式al=1:显示字符串，光标跟随移动
	mov bx, 0x2 			; bh存储要显示的页号，这里是0
							; bl是字符属性，属性黑底绿字bl=02h
	int 0x10

;;;;;;;;; 		打印字符串结束

	jmp $ 					; 使程序死循环

	message db "Outis"
	times 510 - ($-$$) db 0
	db 0x55, 0xaa











